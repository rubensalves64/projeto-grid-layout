body,
ul,
li,
p {
  margin: 0px;
  padding: 0px;
  list-style: none;
  font-size: 1.2rem;
  font-family: Arial;
}

body {
  margin-bottom: 100px;
}

a {
  text-decoration: none;
  color: white;
}

h1 {
  text-align: center;
  margin-top: 100px;
}

img {
  max-width: 100%;
  display: block;
}

.header {
  background: #1d1e20;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
}

.menu {
  display: flex;
}

.menu li {
  margin-left: 10px;
}

.menu li a {
  display: block;
  padding: 10px;
}


/* CSS FLEXBOX 1 */

.flex {
  display: flex;
  flex-wrap: wrap;
  max-width: 800px;
  margin: 0 auto;
}

.flex > div {
  flex: 1 1 200px;
  margin: 10px;
}
























/*grid exemplo 1*/

.grid1{
    display: grid;
    /*ou grid-template-columns:repeat(3, 1fr)
    o fr e como unidade fracional*/
    grid-template-columns: 1fr 1fr 1fr;
    max-width: 800px;
  padding: 10px;
    margin: 0 auto;
    /* grid-gap: 20px distancia de cada foto*/
    grid-gap: 20px;
}
/*nth-child() significar que eu  fazer uma grid derivada
daquela*/
/* nth-child(n+4) signifcar que a partir daquele item funciona*/
.grid1 > div:nth-child(n+4){
  display: grid;
  grid-template-columns: 1fr 1fr;
  /* grid-gap: 10px; vai dar o espaÃ§o entre a imagem 
  e legenda*/
  grid-gap: 10px;
  /*align-items: center; vai alinhar ao meio
   a legenda com a foto*/
  align-items: center;
}
.grid1 > div.anuncio{
  /*grid-column: 1; ele sempre vai 
  esta posicionado na primeira coluna*/
  grid-column: 1;
  /*grid-row: 2/5; significar que eu quero que minha div com texto
  e image ocupe da linha 2 ao 5*/
  grid-row: 2/5;
  border-top: 10px red solid;
  /*para a foto com a div
   ficar do tamanho do display block original*/
  display: block;
}
body{
  margin-bottom: 100px;
}
/* @media(max-width:600px) tudo que for a baixo de 
600px aplicar esses estilos*/
@media(max-width:600px){
  .grid1{
    grid-template-columns: 1fr 1fr;

  }
  .grid1 > div:nth-child(n+4){
    display: block;
  }
  .grid1 > div.anuncio{
    /*faz o que a imagem da div anuncio se adeque aos tamnho 
    do display ao dimunir tanto em colum como em linhas*/
    grid-column: auto;
    grid-row: auto;
  }
}




















/*grid exemplo 2*/


.grid2{
  display:grid ;
  /*grid-template-columns: 1fr 200px;significar que quero que a div nao diminiuar para 
  menos de 200px */
  
  grid-template-columns: 1fr 200px;
  grid-gap: 20px;
  max-width: 800px;
  padding: 10px;
  margin: 0 auto;
}
.sidebar > div{
margin-bottom: 10px;
}
@media(max-width:600px){
  .grid2{
    grid-template-columns: 1fr;
  }
}
.sidebar{
  display: flex;
  /*overflow: scroll;quando eu reduzir a
   tela ele vai comprimir as imagens tambem 
   funciona como a barra de rolagem do
   gpoogle para o lado e para o outro*/
  overflow: scroll;
}
.sidebar > div{
  
  flex: 1 1 200px;
  margin: 0 10px;

}






/* Section grid 3*/

.grid3 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 20px;
  margin: 0 auto;
  max-width: 800px;
  padding: 10px;
}

.grid3-item:nth-child(1) {
  grid-row: 1 / 3;
}

.grid3-item {
  display: grid;
}

.grid3-item img {
  grid-column: 1;
  grid-row: 1/3;
  align-self: end;
}

.grid3-item p {
  background: rgba(0, 0, 0, 0.6);
  padding: 10px;
  color: white;
  grid-column: 1;
  grid-row: 2;
  align-self: end;
}